#!/usr/bin/env bash
# -*- mode: sh -*-
# vi: set ft=sh :
###############################################################################
# prompt a user for a given set of values
#
###############################################################################
#? userprompt [ONE[, TWO, ...]] -> prompt to choose one of those results, this will set

#### NOTE 2022-01-18
# this doesn't work because it returns the prompt and the results, the one we use
# that is just a function works because it sets a variable to just the results, this
# will never work as a standalone application because of this
#

#  echo $@
#  for d in "${@}"; do
#    echo "$d"
#  done

userprompt_chosen=""

if [[ $# -eq 1 ]]; then

  userprompt_chosen=$@

elif [[ $# -gt 1 ]]; then

  # split the string into an array
  IFS=$'\n'; ds=( $@ ); unset IFS

  # print out all the found files to the user and let them choose which one to open
  # http://stackoverflow.com/a/10586169
  for index in "${!ds[@]}"; do
    i=$(expr $index + 1)
    echo -e "[$i]\t${ds[index]}"
  done

  echo -e "[n]\tNone"

  # http://stackoverflow.com/questions/226703/how-do-i-prompt-for-input-in-a-linux-shell-script
  read -p "Choice? " fns
  if [[ ! $fns =~ [nN] ]]; then
    for fn in ${fns[@]}; do
      i=$(expr $fn - 1)
      userprompt_chosen+="${ds[i]}\n"
    done
  fi

  # strip whitespace off the end of the string
  # http://stackoverflow.com/a/23332475/5006
  # http://stackoverflow.com/questions/369758/how-to-trim-whitespace-from-a-bash-variable
  #userprompt_chosen=$(echo -e $userprompt_chosen)
#  if [[ "$userprompt_chosen" =~ ^(.*)[[:space:]]$ ]]; then 
#    userprompt_chosen=${BASH_REMATCH[1]}
#  fi
  #userprompt_chosen=$(read -rd '' $userprompt_chosen <<<"${!userprompt_chosen}")
  userprompt_chosen="${userprompt_chosen%"${userprompt_chosen##*[!\\n]}"}"

fi

echo -e $userprompt_chosen

#export userprompt_chosen


