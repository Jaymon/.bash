#!/bin/bash
# -*- mode: sh -*-
# vi: set ft=sh :
###############################################################################
if [[ $1 == "--help" ]] || [[ $1 == "-h" ]] || [[ "$#" -eq 0 ]]; then
  echo "usage: $(basename $0) <COUNT>"
  echo "Set a timer to expire in <COUNT> seconds"
  echo "  <COUNT> is assumed to be seconds unless it ends with an m (minutes)"
  echo "  or h (hours)"
  exit 0

fi


interval=60
total=0

if [[ "$1" =~ "m"$ ]]; then
  #echo "minutes"
  # arithmetic operator is $(( ))
  total=$((${1%m} * 60))

elif [[ "$1" =~ "s"$ ]]; then
  #echo "seconds"
  total=${1%s}

elif [[ "$1" =~ "h"$ ]]; then
  #echo "hours"
  total=$((${1%h} * 60 * 60))

else
  #echo "seconds"
  total=${1}

fi

ototal=$total
ominutes=$(($ototal / 60))
oseconds=$(($ototal % 60))

# https://superuser.com/a/1368308
padding=$(printf '%*s' ${#total} "")
#echo ".${padding}."

while [[ $total > 0 ]]; do
  minutes=$(($total / 60))
  seconds=$(($total % 60))
  # https://stackoverflow.com/questions/12628327/how-to-show-and-update-echo-on-same-line#comment71448409_12628482
  #printf "${total}${padding}"\\r
  printf "${minutes}m${seconds}s${padding}"\\r
  total=$(($total - 1))
  sleep 1

done

if uname | grep -q "Darwin"; then
  # https://stackoverflow.com/a/65402308
  say "timer of ${ominutes} minutes and ${oseconds} seconds has finished"

else
  # https://stackoverflow.com/a/1143407
  echo -en "\007"
  sleep 1
  echo -en "\007"
  sleep 1
  echo -en "\007"

fi

echo "Timer of ${ominutes}m${oseconds}s expired on $(date)"

